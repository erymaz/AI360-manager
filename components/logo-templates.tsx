import React from "react";

export const LogoNames = [
  "FileBox",
  "BuildingBox",
  "IconBox",
  "LightBulb",
  "Plane",
  "Chip",
  "Store",
  "Basket",
  "Book",
  "Game",
  "Video",
  "Wallet",
  "Flag",
  "Stocks",
  "Cloud",
  "Diagram",
  "Messages",
  "Likes",
  "Globe",
  "Instagram",
  "Facebook",
];

export const IconBox = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M2.40047 6.53479L11.2305 11.5384L20.0005 6.56417M11.2305 20.4099V11.5287M16.2305 12.2141V8.63026L6.74047 3.2643M9.16012 1.67802L3.82012 4.58621C2.61012 5.24226 1.62012 6.8873 1.62012 8.23858V13.771C1.62012 15.1223 2.61012 16.7673 3.82012 17.4234L9.16012 20.3316C10.3001 20.9484 12.1701 20.9484 13.3101 20.3316L18.6501 17.4234C19.8601 16.7673 20.8501 15.1223 20.8501 13.771V8.23858C20.8501 6.8873 19.8601 5.24226 18.6501 4.58621L13.3101 1.67802C12.1601 1.05134 10.3001 1.05134 9.16012 1.67802Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const FileBox = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M21 9.04151V13.9375C21 18.8334 19 20.7918 14 20.7918H8C3 20.7918 1 18.8334 1 13.9375V8.06233C1 3.16638 3 1.20801 8 1.20801H13M21 9.04151H17C14 9.04151 13 8.06233 13 5.12476V1.20801M21 9.04151L13 1.20801M6 11.9791H12M6 15.8958H10"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const BuildingBox = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 23 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.31523 16.875H3.76523C2.33523 16.875 1.61523 16.17 1.61523 14.7698V3.31326C1.61523 1.91302 2.33523 1.20801 3.76523 1.20801H8.06523C9.49523 1.20801 10.2152 1.91302 10.2152 3.31326V5.12476M13.0152 5.12476V3.31326C13.0152 1.91302 13.7352 1.20801 15.1652 1.20801H19.4652C20.8952 1.20801 21.6152 1.91302 21.6152 3.31326V14.7698C21.6152 16.17 20.8952 16.875 19.4652 16.875H16.9852M9.61524 10.0207H13.6152M9.61524 12.9583H13.6152M11.6152 20.7918V17.8542M16.9852 7.4944V18.4221C16.9852 19.9986 16.1852 20.7918 14.5752 20.7918H8.73523C7.12523 20.7918 6.31523 19.9986 6.31523 18.4221V7.4944C6.31523 5.9179 7.12523 5.12476 8.73523 5.12476H14.5752C16.1852 5.12476 16.9852 5.9179 16.9852 7.4944Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeMiterlimit="10"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const LightBulb = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 18 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M5.34605 20.7919C7.63605 20.1554 10.0561 20.1554 12.3461 20.7919M5.14605 16.9143V15.7784C2.84605 14.4173 0.956055 11.7637 0.956055 8.94368C0.956055 4.0967 5.50606 0.297453 10.6461 1.39414C12.9061 1.88374 14.8861 3.35252 15.9161 5.37944C18.0061 9.49203 15.8061 13.8592 12.5761 15.7686V16.9045C12.5761 17.1885 12.6861 17.8445 11.6161 17.8445H6.10605C5.00605 17.8543 5.14605 17.4332 5.14605 16.9143Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Location = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 19 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M9.46162 12.4001C9.87135 12.4001 10.2771 12.3211 10.6556 12.1676C11.0341 12.014 11.3781 11.789 11.6678 11.5053C11.9575 11.2216 12.1873 10.8848 12.3441 10.5142C12.5009 10.1435 12.5816 9.74626 12.5816 9.34507C12.5816 8.94387 12.5009 8.5466 12.3441 8.17594C12.1873 7.80528 11.9575 7.46849 11.6678 7.18481C11.3781 6.90112 11.0341 6.67608 10.6556 6.52255C10.2771 6.36902 9.87135 6.29 9.46162 6.29C8.63415 6.29 7.84056 6.61187 7.25545 7.18481C6.67034 7.75774 6.34162 8.53481 6.34162 9.34507C6.34162 10.1553 6.67034 10.9324 7.25545 11.5053C7.84056 12.0783 8.63415 12.4001 9.46162 12.4001Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
    />
    <path
      d="M1.08162 7.56294C3.05162 -0.916829 15.8816 -0.907036 17.8416 7.57273C18.9916 12.547 15.8316 16.7575 13.0616 19.3622C12.0937 20.2763 10.8014 20.7871 9.45662 20.7871C8.11187 20.7871 6.81955 20.2763 5.85162 19.3622C3.09162 16.7575 -0.0683769 12.5372 1.08162 7.56294Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
    />
  </svg>
);

export const Plane = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 20 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7.10738 20.4882L9.43738 18.569C9.78738 18.2752 10.3674 18.2752 10.7174 18.569L13.0474 20.4882C13.5874 20.7526 14.2474 20.4882 14.4474 19.9203L14.8874 18.6179C14.9974 18.3046 14.8874 17.8444 14.6474 17.6094L12.3774 15.3768C12.2074 15.2202 12.0774 14.9068 12.0774 14.6816V11.8909C12.0774 11.4797 12.3874 11.2838 12.7774 11.4405L17.6874 13.5164C18.4574 13.8395 19.0874 13.438 19.0874 12.6155V11.3524C19.0874 10.6963 18.5874 9.94234 17.9674 9.68775L12.3774 7.3279C12.2917 7.28484 12.219 7.22064 12.1664 7.14165C12.1138 7.06267 12.0831 6.97161 12.0774 6.87748V3.93991C12.0774 3.01948 11.3874 1.93258 10.5474 1.51153C10.2474 1.36465 9.89738 1.36465 9.59738 1.51153C8.75738 1.93258 8.06738 3.02927 8.06738 3.9497V6.88727C8.06738 7.06352 7.92738 7.26915 7.76738 7.3377L2.18738 9.69754C1.56738 9.94234 1.06738 10.6963 1.06738 11.3524V12.6155C1.06738 13.438 1.69738 13.8395 2.46738 13.5164L7.37738 11.4405C7.75738 11.274 8.07738 11.4797 8.07738 11.8909V14.6816C8.07738 14.9068 7.94738 15.2202 7.78738 15.3768L5.51738 17.6094C5.27738 17.8444 5.16738 18.2948 5.27738 18.6179L5.71738 19.9203C5.89738 20.4882 6.55738 20.7624 7.10738 20.4882Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Chip = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 23 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7.70238 3.16638V1.20801M11.6924 3.16638V1.20801M15.6924 3.16638V1.20801M19.6924 7.08314H21.6924M19.6924 10.9999H21.6924M19.6924 14.9166H21.6924M15.6924 18.8334V20.7918M11.7024 18.8334V20.7918M7.70238 18.8334V20.7918M1.69238 7.08314H3.69238M1.69238 10.9999H3.69238M1.69238 14.9166H3.69238M9.29238 18.8334H14.0924C18.0924 18.8334 19.6924 17.2667 19.6924 13.3499V8.64984C19.6924 4.73309 18.0924 3.16638 14.0924 3.16638H9.29238C5.29238 3.16638 3.69238 4.73309 3.69238 8.64984V13.3499C3.69238 17.2667 5.29238 18.8334 9.29238 18.8334ZM10.1924 15.8958H13.1924C15.6924 15.8958 16.6924 14.9166 16.6924 12.4687V9.53111C16.6924 7.08314 15.6924 6.10395 13.1924 6.10395H10.1924C7.69238 6.10395 6.69238 7.08314 6.69238 9.53111V12.4687C6.69238 14.9166 7.69238 15.8958 10.1924 15.8958Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Store = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M2.31762 10.2361V14.6327C2.31762 19.0292 4.11762 20.7918 8.60762 20.7918H13.9976C18.4876 20.7918 20.2876 19.0292 20.2876 14.6327V10.2361M11.3081 10.9999C13.1381 10.9999 14.4881 9.5409 14.3081 7.74899L13.6481 1.20801H8.9781L8.30809 7.74899C8.12809 9.5409 9.47809 10.9999 11.3081 10.9999ZM17.618 10.9999C19.638 10.9999 21.118 9.39402 20.918 7.42585L20.638 4.73309C20.278 2.1872 19.278 1.20801 16.658 1.20801H13.608L14.308 8.07212C14.478 9.68778 15.968 10.9999 17.618 10.9999ZM4.94799 10.9999C6.59799 10.9999 8.08799 9.68778 8.24799 8.07212L8.94799 1.20801H5.89799C3.27799 1.20801 2.27799 2.1872 1.91799 4.73309L1.64799 7.42585C1.44799 9.39402 2.92799 10.9999 4.94799 10.9999ZM11.308 15.8958C9.63799 15.8958 8.80799 16.7086 8.80799 18.3438V20.7918H13.808V18.3438C13.808 16.7086 12.978 15.8958 11.308 15.8958Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Basket = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7.73328 1.20801L4.11328 4.76246M14.1133 1.20801L17.7333 4.76246M8.68285 12.9583V16.4344M13.2829 12.9583V16.4344M2.42285 9.04151L3.83285 17.5017C4.15285 19.4013 4.92285 20.7918 7.78285 20.7918H13.8129C16.9229 20.7918 17.3829 19.4601 17.7429 17.6192L19.4229 9.04151M0.922852 6.93626C0.922852 5.12476 1.91285 4.97788 3.14285 4.97788H18.7029C19.9329 4.97788 20.9229 5.12476 20.9229 6.93626C20.9229 9.04151 19.9329 8.89464 18.7029 8.89464H3.14285C1.91285 8.89464 0.922852 9.04151 0.922852 6.93626Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
    />
  </svg>
);

export const Book = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 23 20"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M14.5381 2.08786C13.6681 2.43058 12.8681 2.81246 12.2381 3.19435L12.0681 3.30206C11.7781 3.47831 11.2981 3.47831 11.0081 3.30206L10.7581 3.15518C8.97809 2.06828 5.79809 1.03034 3.69809 0.863879C2.50809 0.76596 1.53809 1.64723 1.53809 2.81246V14.6411C1.53809 15.5811 2.31809 16.4623 3.27809 16.5798L3.56809 16.619C5.73809 16.903 9.08809 17.9801 11.0081 19.0082L11.0481 19.0278C11.3181 19.1747 11.7481 19.1747 12.0081 19.0278C13.9281 17.9899 17.2881 16.903 19.4681 16.619L19.7981 16.5798C20.7581 16.4623 21.5381 15.5811 21.5381 14.6411V2.82226C21.5381 1.64723 20.5581 0.775752 19.3681 0.87367H19.3081C19.0681 0.893254 18.8081 0.92263 18.5381 0.971589M14.5381 2.08786V6.08295L16.5381 4.78063L18.5381 6.08295V0.971589M14.5381 2.08786C15.8481 1.57869 17.3081 1.16743 18.5381 0.971589M11.5381 3.62519V18.313"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Game = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.72383 11.4503L5.67383 14.4368M5.70383 11.4797L8.75383 14.4662M12.1643 1.20801L12.1543 2.19699C12.1517 2.45498 12.0451 2.70154 11.8579 2.88306C11.6706 3.06458 11.4178 3.1664 11.1543 3.16638H11.1243C10.5743 3.16638 10.1343 3.60702 10.1343 4.14557C10.1343 4.68413 10.5843 5.12476 11.1343 5.12476H12.1343M8.1543 20.7918H14.1543C19.1543 20.7918 21.1543 18.8334 21.1543 13.9375V11.9791C21.1543 7.08314 19.1543 5.12476 14.1543 5.12476H8.1543C3.1543 5.12476 1.1543 7.08314 1.1543 11.9791V13.9375C1.1543 18.8334 3.1543 20.7918 8.1543 20.7918Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Video = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1.28953 6.21166H20.2495M7.28953 1.31572V6.07457M14.2495 1.31572V5.63394M20.7695 13.9375V8.06233C20.7695 3.16639 18.7695 1.20801 13.7695 1.20801H7.76953C2.76953 1.20801 0.769531 3.16639 0.769531 8.06233V13.9375C0.769531 18.8334 2.76953 20.7918 7.76953 20.7918H13.7695C18.7695 20.7918 20.7695 18.8334 20.7695 13.9375ZM8.51953 12.2239C8.51953 10.7159 9.60953 10.099 10.9395 10.853L13.0195 12.028C14.3495 12.782 14.3495 14.0158 13.0195 14.7698L10.9395 15.9448C9.60953 16.6988 8.51953 16.0819 8.51953 14.5739V12.2239Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeMiterlimit="10"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Wallet = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.9848 15.9447C16.9048 15.9447 15.9148 15.1712 15.8248 14.1136C15.7648 13.4967 16.0048 12.919 16.4248 12.5176C16.7948 12.1455 17.3048 11.93 17.8648 11.93M17.9848 15.9447H19.8848V17.11C19.8848 19.1369 18.1948 20.7917 16.1248 20.7917H4.64477C2.57477 20.7917 0.884766 19.1369 0.884766 17.11V10.52C0.884766 8.49309 2.57477 6.83827 4.64477 6.83827H16.1248C18.1948 6.83827 19.8848 8.49309 19.8848 10.52V11.93H17.8648M17.9848 15.9447L19.9438 15.9447C20.5038 15.9251 20.9438 15.4845 20.9438 14.9459V12.9288C20.9438 12.3903 20.5038 11.9496 19.9438 11.93L17.8648 11.93M17.9848 15.9447C16.9048 15.9447 15.9138 15.1712 15.8238 14.1136C15.7638 13.4967 16.0038 12.919 16.4238 12.5176C16.7938 12.1455 17.3048 11.93 17.8648 11.93M0.884766 11.4013V6.92639C0.884766 5.76116 1.61477 4.72322 2.72477 4.31196L10.6648 1.3744C10.9525 1.26824 11.2622 1.23203 11.5673 1.26887C11.8724 1.30571 12.1638 1.4145 12.4166 1.5859C12.6693 1.75731 12.8758 1.9862 13.0183 2.25295C13.1608 2.51969 13.2351 2.81631 13.2348 3.11735V6.83827M5.38477 10.9998H12.3848"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Flag = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 16 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1.15039 1.20801V20.7918M1.15039 3.16638H12.3504C15.0504 3.16638 15.6504 4.63517 13.7504 6.49562L12.5504 7.67065C11.7504 8.454 11.7504 9.72695 12.5504 10.4124L13.7504 11.5874C15.6504 13.4479 14.9504 14.9166 12.3504 14.9166H1.15039"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeMiterlimit="10"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Stocks = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M21 11.9791V8.06233C21 3.16638 19 1.20801 14 1.20801H8C3 1.20801 1 3.16638 1 8.06233V13.9375C1 18.8334 3 20.7918 8 20.7918H12M6.33 13.4381L8.71 10.4124C9.05 9.98153 9.68 9.9032 10.12 10.2361L11.95 11.6462C12.39 11.9791 13.02 11.9007 13.36 11.4797L15.67 8.56171M18.48 14.7404L18.76 15.2985C18.9 15.5727 19.25 15.8273 19.56 15.886L19.94 15.9448C21.08 16.1308 21.35 16.9534 20.53 17.7661L20.18 18.1088C19.95 18.3438 19.82 18.7942 19.89 19.1076L19.94 19.3132C20.25 20.6645 19.52 21.1834 18.32 20.4784L18.06 20.3316C17.75 20.1553 17.25 20.1553 16.94 20.3316L16.68 20.4784C15.47 21.1932 14.74 20.6645 15.06 19.3132L15.11 19.1076C15.18 18.7942 15.05 18.3438 14.82 18.1088L14.47 17.7661C13.65 16.9534 13.92 16.1308 15.06 15.9448L15.44 15.886C15.74 15.8371 16.1 15.5727 16.24 15.2985L16.52 14.7404C17.06 13.6731 17.94 13.6731 18.48 14.7404Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Cloud = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 23 18"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.89016 9.98877C6.35717 9.72403 5.7678 9.58647 5.17016 9.58731C0.490156 9.91044 0.490156 16.5787 5.17016 16.9018H16.2602C17.6102 16.9116 18.9102 16.422 19.9002 15.531C23.1902 12.7207 21.4302 7.07079 17.1002 6.53224C15.5402 -2.64276 2.01016 0.843155 5.22016 9.58731"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeMiterlimit="10"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Diagram = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1.20996 11.6854L7.20996 11.6658C7.95996 11.6658 8.79996 12.224 9.07996 12.9094L10.22 15.7295C10.48 16.3659 10.89 16.3659 11.15 15.7295L13.44 10.0404C13.66 9.49205 14.07 9.47246 14.35 9.99143L15.39 11.9204C15.7 12.4982 16.5 12.9682 17.16 12.9682H21.22M8.20996 20.7918H14.21C19.21 20.7918 21.21 18.8334 21.21 13.9375V8.06233C21.21 3.16638 19.21 1.20801 14.21 1.20801H8.20996C3.20996 1.20801 1.20996 3.16638 1.20996 8.06233V13.9375C1.20996 18.8334 3.20996 20.7918 8.20996 20.7918Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Message = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 25 24"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M9.36035 18.8542H8.86035C4.86035 18.8542 2.86035 17.875 2.86035 12.9791V8.08314C2.86035 4.16638 4.86035 2.20801 8.86035 2.20801H16.8604C20.8604 2.20801 22.8604 4.16638 22.8604 8.08314V12.9791C22.8604 16.8958 20.8604 18.8542 16.8604 18.8542H16.3604C16.0504 18.8542 15.7504 19.0011 15.5604 19.2459L14.0604 21.2043C13.4004 22.0659 12.3204 22.0659 11.6604 21.2043L10.1604 19.2459C10.0004 19.0305 9.63035 18.8542 9.36035 18.8542Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeMiterlimit="10"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M16.8565 11.0205H16.8665M12.8555 11.0205H12.8655M8.85547 11.0205H8.86347"
      stroke="black"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Likes = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 23 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.17047 20.449L6.69519 19.9132L6.6613 19.88L6.62349 19.8513L6.17047 20.449ZM11.0305 19.6069L10.3194 19.3684L10.3102 19.3958L10.3031 19.4239L11.0305 19.6069ZM12.4005 15.5237L11.6971 15.2633L11.6931 15.2742L11.6894 15.2851L12.4005 15.5237ZM9.02047 14.0647V13.3147H9.0198L9.02047 14.0647ZM8.45047 13.3891L9.18629 13.5342L9.18878 13.5216L9.19084 13.5089L8.45047 13.3891ZM8.74047 11.5972L8.00803 11.4358L8.00348 11.4565L8.0001 11.4774L8.74047 11.5972ZM8.00047 10.3634L7.74526 11.0686L7.75645 11.0727L7.76775 11.0764L8.00047 10.3634ZM6.74047 10.7551L6.1234 10.3288L6.12164 10.3313L6.74047 10.7551ZM16.7905 1.5507L16.2657 2.08657L16.2996 2.11977L16.3375 2.14842L16.7905 1.5507ZM11.9305 2.3928L12.6415 2.63137L12.6507 2.6039L12.6578 2.57581L11.9305 2.3928ZM10.5605 6.47601L11.2638 6.7364L11.2678 6.72555L11.2715 6.71458L10.5605 6.47601ZM14.5105 8.61065L15.2509 8.73047L15.2518 8.72421L14.5105 8.61065ZM14.2205 10.4026L14.9529 10.5639L14.9575 10.5432L14.9608 10.5224L14.2205 10.4026ZM14.9605 11.6363L15.2157 10.9311L15.2045 10.927L15.1932 10.9234L14.9605 11.6363ZM16.2205 11.2447L16.8375 11.671L16.8393 11.6684L16.2205 11.2447ZM3.94745 19.7053L5.71745 21.0468L6.62349 19.8513L4.85349 18.5098L3.94745 19.7053ZM5.64574 20.9849C5.89517 21.2291 6.2252 21.3552 6.47133 21.423C6.73607 21.4959 7.01804 21.532 7.26047 21.532V20.032C7.15289 20.032 7.00487 20.0141 6.8696 19.9769C6.80376 19.9587 6.75266 19.9392 6.71741 19.922C6.67955 19.9035 6.67852 19.8968 6.69519 19.9132L5.64574 20.9849ZM7.26047 21.532H9.43047V20.032H7.26047V21.532ZM9.43047 21.532C9.94901 21.532 10.4567 21.3477 10.8619 21.0577C11.2672 20.7677 11.6208 20.3344 11.7578 19.7899L10.3031 19.4239C10.2701 19.5552 10.1687 19.7093 9.98903 19.8379C9.80926 19.9665 9.60193 20.032 9.43047 20.032V21.532ZM11.7415 19.8455L13.1115 15.7623L11.6894 15.2851L10.3194 19.3684L11.7415 19.8455ZM13.1038 15.7841C13.3282 15.1779 13.2561 14.5402 12.8855 14.0488C12.521 13.5656 11.9376 13.3147 11.3105 13.3147V14.8147C11.5433 14.8147 11.6499 14.9017 11.6879 14.9521C11.7198 14.9944 11.7627 15.0861 11.6971 15.2633L13.1038 15.7841ZM11.3105 13.3147H9.02047V14.8147H11.3105V13.3147ZM9.0198 13.3147C9.04241 13.3147 9.06525 13.3196 9.08684 13.3295L8.45925 14.6919C8.63564 14.7732 8.82746 14.8149 9.02114 14.8147L9.0198 13.3147ZM9.08684 13.3295C9.10847 13.3395 9.12893 13.3546 9.14603 13.3749L7.99954 14.3421C8.12559 14.4915 8.28282 14.6106 8.45925 14.6919L9.08684 13.3295ZM9.14603 13.3749C9.16319 13.3952 9.17642 13.4201 9.18371 13.4481L7.73218 13.8263C7.78177 14.0166 7.87343 14.1926 7.99954 14.3421L9.14603 13.3749ZM9.18371 13.4481C9.19102 13.4761 9.19193 13.5057 9.18629 13.5342L7.71465 13.2439C7.67657 13.437 7.68258 13.636 7.73218 13.8263L9.18371 13.4481ZM9.19084 13.5089L9.48084 11.717L8.0001 11.4774L7.7101 13.2693L9.19084 13.5089ZM9.47291 11.7585C9.67181 10.8555 9.08282 9.92773 8.23318 9.65041L7.76775 11.0764C7.93812 11.132 8.02913 11.3401 8.00803 11.4358L9.47291 11.7585ZM8.25568 9.65815C7.83308 9.50522 7.3974 9.54234 7.04464 9.66125C6.69744 9.7783 6.34915 10.002 6.1234 10.3288L7.35753 11.1814C7.35661 11.1827 7.36792 11.1668 7.4009 11.1436C7.43282 11.1212 7.47508 11.0991 7.5238 11.0827C7.62854 11.0474 7.70786 11.0551 7.74526 11.0686L8.25568 9.65815ZM6.12164 10.3313L3.78164 13.7487L5.0193 14.5962L7.3593 11.1788L6.12164 10.3313ZM2.23047 19.1075V13.6241H0.730469V19.1075H2.23047ZM2.23047 13.6241C2.23047 13.3194 2.29929 13.3112 2.25617 13.3505C2.23003 13.3744 2.27718 13.3068 2.62047 13.3068V11.8068C2.16376 11.8068 1.6409 11.8811 1.24477 12.2428C0.831645 12.62 0.730469 13.1454 0.730469 13.6241H2.23047ZM2.62047 13.3068H3.19047V11.8068H2.62047V13.3068ZM3.19047 13.3068C3.53376 13.3068 3.5809 13.3744 3.55477 13.3505C3.51165 13.3112 3.58047 13.3194 3.58047 13.6241H5.08047C5.08047 13.1454 4.97929 12.62 4.56617 12.2428C4.17003 11.8811 3.64718 11.8068 3.19047 11.8068V13.3068ZM3.58047 13.6241V19.1075H5.08047V13.6241H3.58047ZM3.58047 19.1075C3.58047 19.4122 3.51165 19.4205 3.55477 19.3811C3.5809 19.3572 3.53376 19.4249 3.19047 19.4249V20.9249C3.64718 20.9249 4.17003 20.8505 4.56617 20.4888C4.97929 20.1116 5.08047 19.5862 5.08047 19.1075H3.58047ZM3.19047 19.4249H2.62047V20.9249H3.19047V19.4249ZM2.62047 19.4249C2.45859 19.4249 2.35687 19.4105 2.2962 19.3944C2.24013 19.3797 2.23847 19.3687 2.25416 19.3829C2.30057 19.425 2.23047 19.42 2.23047 19.1075H0.730469C0.730469 19.5883 0.830371 20.1169 1.24678 20.4943C1.64458 20.8549 2.16898 20.9249 2.62047 20.9249V19.4249ZM19.0135 2.29446L17.2435 0.952972L16.3375 2.14842L18.1075 3.48991L19.0135 2.29446ZM17.3152 1.01482C17.0658 0.770584 16.7357 0.644484 16.4896 0.5767C16.2249 0.503792 15.9429 0.467773 15.7005 0.467773V1.96777C15.808 1.96777 15.9561 1.98561 16.0913 2.02286C16.1572 2.041 16.2083 2.06055 16.2435 2.07774C16.2814 2.09621 16.2824 2.1029 16.2657 2.08657L17.3152 1.01482ZM15.7005 0.467773H13.5305V1.96777H15.7005V0.467773ZM13.5305 0.467773C13.0119 0.467773 12.5043 0.65202 12.099 0.941989C11.6937 1.23201 11.3401 1.66538 11.2031 2.20979L12.6578 2.57581C12.6908 2.44458 12.7922 2.29044 12.9719 2.16185C13.1517 2.03322 13.359 1.96777 13.5305 1.96777V0.467773ZM11.2194 2.15423L9.84942 6.23744L11.2715 6.71458L12.6415 2.63137L11.2194 2.15423ZM9.85712 6.21563C9.63272 6.82179 9.70481 7.45949 10.0754 7.95089C10.4399 8.43417 11.0233 8.68501 11.6505 8.68501V7.18501C11.4176 7.18501 11.311 7.09802 11.273 7.04765C11.2411 7.00538 11.1982 6.91359 11.2638 6.7364L9.85712 6.21563ZM11.6505 8.68501H13.9405V7.18501H11.6505V8.68501ZM13.9405 8.68501C13.9015 8.68501 13.8545 8.66837 13.8169 8.6265C13.7977 8.60508 13.7832 8.57914 13.7751 8.55173C13.7668 8.52371 13.7681 8.50357 13.7691 8.49708L15.2518 8.72421C15.3863 7.84631 14.7069 7.18501 13.9405 7.18501V8.68501ZM13.7701 8.49083L13.4801 10.2827L14.9608 10.5224L15.2508 8.73047L13.7701 8.49083ZM13.488 10.2412C13.2891 11.1442 13.8781 12.072 14.7278 12.3493L15.1932 10.9234C15.0228 10.8677 14.9318 10.6597 14.9529 10.5639L13.488 10.2412ZM14.7053 12.3416C15.1279 12.4945 15.5635 12.4574 15.9163 12.3385C16.2635 12.2214 16.6118 11.9977 16.8375 11.671L15.6034 10.8184C15.6043 10.817 15.593 10.8329 15.56 10.8561C15.5281 10.8785 15.4859 10.9006 15.4371 10.9171C15.3324 10.9524 15.2531 10.9446 15.2157 10.9311L14.7053 12.3416ZM16.8393 11.6684L19.1793 8.25103L17.9416 7.40356L15.6016 10.8209L16.8393 11.6684ZM20.7309 2.89219V8.37564H22.2309V2.89219H20.7309ZM20.7309 8.37564C20.7309 8.68034 20.662 8.68857 20.7052 8.64919C20.7313 8.62533 20.6842 8.69296 20.3409 8.69296V10.193C20.7976 10.193 21.3204 10.1186 21.7166 9.75693C22.1297 9.37973 22.2309 8.8543 22.2309 8.37564H20.7309ZM20.3409 8.69296H19.7709V10.193H20.3409V8.69296ZM19.7709 8.69296C19.4276 8.69296 19.3804 8.62533 19.4066 8.64919C19.4497 8.68856 19.3809 8.68034 19.3809 8.37564H17.8809C17.8809 8.8543 17.982 9.37973 18.3952 9.75693C18.7913 10.1186 19.3142 10.193 19.7709 10.193V8.69296ZM19.3809 8.37564V2.89219H17.8809V8.37564H19.3809ZM19.3809 2.89219C19.3809 2.58749 19.4497 2.57927 19.4066 2.61865C19.3804 2.6425 19.4276 2.57487 19.7709 2.57487V1.07487C19.3142 1.07487 18.7913 1.14923 18.3952 1.51091C17.982 1.8881 17.8809 2.41354 17.8809 2.89219H19.3809ZM19.7709 2.57487H20.3409V1.07487H19.7709V2.57487ZM20.3409 2.57487C20.5027 2.57487 20.6045 2.58928 20.6651 2.60529C20.7212 2.62008 20.7229 2.63102 20.7072 2.6168C20.6608 2.57473 20.7309 2.57976 20.7309 2.89219H22.2309C22.2309 2.41148 22.131 1.88285 21.7145 1.50541C21.3168 1.14484 20.7924 1.07487 20.3409 1.07487V2.57487Z"
      fill="#3E4856"
    />
  </svg>
);
export const Globe = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 22 22"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M7.09919 2.1872H8.09919C6.14923 7.90719 6.14923 14.0926 8.09919 19.8126H7.09919M14.0992 2.1872C16.0492 7.90719 16.0492 14.0926 14.0992 19.8126M2.09961 14.9166V13.9375C7.94118 15.8468 14.258 15.8468 20.0996 13.9375V14.9166M2.09961 8.06233C7.94118 6.15294 14.258 6.15294 20.0996 8.06233M11.0996 20.7918C16.6226 20.7918 21.0996 16.4079 21.0996 10.9999C21.0996 5.59183 16.6226 1.20801 11.0996 1.20801C5.57661 1.20801 1.09961 5.59183 1.09961 10.9999C1.09961 16.4079 5.57661 20.7918 11.0996 20.7918Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Instagram = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 25 24"
    fill={props.fill ?? "white"}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M9.71973 21.7918H15.7197C20.7197 21.7918 22.7197 19.8334 22.7197 14.9375V9.06233C22.7197 4.16638 20.7197 2.20801 15.7197 2.20801H9.71973C4.71973 2.20801 2.71973 4.16638 2.71973 9.06233V14.9375C2.71973 19.8334 4.71973 21.7918 9.71973 21.7918Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M12.7197 15.4271C13.1794 15.4271 13.6345 15.3384 14.0591 15.1662C14.4838 14.9939 14.8696 14.7415 15.1946 14.4233C15.5196 14.105 15.7774 13.7272 15.9533 13.3114C16.1292 12.8956 16.2197 12.45 16.2197 11.9999C16.2197 11.5498 16.1292 11.1042 15.9533 10.6884C15.7774 10.2726 15.5196 9.89476 15.1946 9.57652C14.8696 9.25828 14.4838 9.00584 14.0591 8.83361C13.6345 8.66138 13.1794 8.57273 12.7197 8.57273C11.7915 8.57273 10.9012 8.93381 10.2449 9.57652C9.58848 10.2192 9.21973 11.091 9.21973 11.9999C9.21973 12.9088 9.58848 13.7805 10.2449 14.4233C10.9012 15.066 11.7915 15.4271 12.7197 15.4271Z"
      stroke={props.stroke ?? "gray"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M18.3555 7.104H18.3675"
      stroke={props.stroke ?? "gray"}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
export const Facebook = (props: {
  fill?: string;
  stroke?: string;
  width?: string;
  height?: string;
}) => (
  <svg
    width={props.width ?? "22"}
    height={props.height ?? "22"}
    viewBox="0 0 23 22"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M13.3398 11.1957H12.5898V11.9457H13.3398V11.1957ZM16.2398 11.5874L16.9731 11.7451L16.9898 11.6671V11.5874H16.2398ZM15.8398 13.4479L15.1066 13.2902L15.0898 13.3681V13.4479H15.8398ZM13.3398 13.6437V12.8937H12.5898V13.6437H13.3398ZM13.3398 20.7918V21.5418H14.0898V20.7918H13.3398ZM10.3398 20.7918H9.58984V21.5418H10.3398V20.7918ZM10.3398 13.7416H11.0898V12.9916H10.3398V13.7416ZM10.3398 11.2936V12.0436H11.0898V11.2936H10.3398ZM12.5898 8.35608V11.1957H14.0898V8.35608H12.5898ZM13.3398 11.9457H15.9398V10.4457H13.3398V11.9457ZM15.9398 11.9457C15.8625 11.9457 15.7776 11.9255 15.6991 11.8806C15.6237 11.8375 15.5744 11.7835 15.5449 11.7402C15.4918 11.6622 15.4898 11.6037 15.4898 11.5874H16.9898C16.9898 11.3753 16.9379 11.1209 16.7848 10.896C16.6164 10.6487 16.3236 10.4457 15.9398 10.4457V11.9457ZM15.5066 11.4298L15.1066 13.2902L16.5731 13.6055L16.9731 11.7451L15.5066 11.4298ZM15.0898 13.4479C15.0898 13.2151 15.2046 13.0688 15.2454 13.0227C15.2934 12.9684 15.3352 12.9431 15.3474 12.9358C15.3637 12.9263 15.3787 12.9196 15.3962 12.9139C15.4061 12.9107 15.4577 12.8937 15.5398 12.8937V14.3937C15.7704 14.3937 15.9782 14.305 16.1073 14.2292C16.182 14.1852 16.28 14.117 16.3686 14.0169C16.4501 13.9248 16.5898 13.7295 16.5898 13.4479H15.0898ZM15.5398 12.8937H13.3398V14.3937H15.5398V12.8937ZM12.5898 13.6437V20.7918H14.0898V13.6437H12.5898ZM13.3398 20.0418H10.3398V21.5418H13.3398V20.0418ZM11.0898 20.7918V13.7416H9.58984V20.7918H11.0898ZM10.3398 12.9916H8.63984V14.4916H10.3398V12.9916ZM8.63984 12.9916C8.65154 12.9916 8.79882 12.9945 8.93957 13.1323C9.08324 13.273 9.08984 13.4261 9.08984 13.4479H7.58984C7.58984 13.6654 7.64645 13.9655 7.89012 14.2041C8.13087 14.4398 8.42815 14.4916 8.63984 14.4916V12.9916ZM9.08984 13.4479V11.5874H7.58984V13.4479H9.08984ZM9.08984 11.5874C9.08984 11.6091 9.08324 11.7623 8.93957 11.903C8.79882 12.0408 8.65154 12.0436 8.63984 12.0436V10.5436C8.42815 10.5436 8.13087 10.5955 7.89012 10.8312C7.64645 11.0698 7.58984 11.3698 7.58984 11.5874H9.08984ZM8.63984 12.0436H10.3398V10.5436H8.63984V12.0436ZM11.0898 11.2936V8.06233H9.58984V11.2936H11.0898ZM11.0898 8.06233C11.0898 6.82671 12.0391 5.87476 13.3398 5.87476V4.37476C11.2406 4.37476 9.58984 5.9687 9.58984 8.06233H11.0898ZM13.3398 5.87476H16.0398V4.37476H13.3398V5.87476ZM16.0398 5.87476C16.0282 5.87476 15.8809 5.8719 15.7401 5.73408C15.5964 5.59339 15.5898 5.44025 15.5898 5.41852H17.0898C17.0898 5.20095 17.0332 4.90093 16.7896 4.66233C16.5488 4.42658 16.2515 4.37476 16.0398 4.37476V5.87476ZM15.5898 5.41852V7.76857H17.0898V5.41852H15.5898ZM15.5898 7.76857C15.5898 7.74684 15.5964 7.59369 15.7401 7.45301C15.8809 7.31519 16.0282 7.31233 16.0398 7.31233V8.81233C16.2515 8.81233 16.5488 8.76051 16.7896 8.52476C17.0332 8.28616 17.0898 7.98614 17.0898 7.76857H15.5898ZM16.0398 7.31233H13.6398V8.81233H16.0398V7.31233ZM13.6398 7.31233C13.4282 7.31233 13.1309 7.36415 12.8901 7.59989C12.6464 7.83849 12.5898 8.13851 12.5898 8.35608H14.0898C14.0898 8.37782 14.0832 8.53096 13.9396 8.67164C13.7988 8.80947 13.6515 8.81233 13.6398 8.81233V7.31233ZM14.3398 20.0418H8.33984V21.5418H14.3398V20.0418ZM8.33984 20.0418C5.91054 20.0418 4.4049 19.561 3.48957 18.6647C2.57816 17.7723 2.08984 16.3081 2.08984 13.9375H0.589844C0.589844 16.4628 1.10153 18.4257 2.44012 19.7365C3.77479 21.0434 5.76915 21.5418 8.33984 21.5418V20.0418ZM2.08984 13.9375V8.06233H0.589844V13.9375H2.08984ZM2.08984 8.06233C2.08984 5.69174 2.57816 4.22751 3.48957 3.33507C4.4049 2.43878 5.91054 1.95801 8.33984 1.95801V0.458008C5.76915 0.458008 3.77479 0.95642 2.44012 2.26331C1.10153 3.57404 0.589844 5.53698 0.589844 8.06233H2.08984ZM8.33984 1.95801H14.3398V0.458008H8.33984V1.95801ZM14.3398 1.95801C16.7692 1.95801 18.2748 2.43878 19.1901 3.33507C20.1015 4.22751 20.5898 5.69174 20.5898 8.06233H22.0898C22.0898 5.53698 21.5782 3.57404 20.2396 2.26331C18.9049 0.95642 16.9105 0.458008 14.3398 0.458008V1.95801ZM20.5898 8.06233V13.9375H22.0898V8.06233H20.5898ZM20.5898 13.9375C20.5898 16.3081 20.1015 17.7723 19.1901 18.6647C18.2748 19.561 16.7692 20.0418 14.3398 20.0418V21.5418C16.9105 21.5418 18.9049 21.0434 20.2396 19.7365C21.5782 18.4257 22.0898 16.4628 22.0898 13.9375H20.5898Z"
      fill="#3E4856"
    />
  </svg>
);

export const Logo = ({
  fill,
  stroke,
  width,
  height,
  name,
  ...rest
}: {
  name?: string;
  fill: string;
  stroke: string;
  width?: string;
  height?: string;
} & React.SVGProps<SVGElement>) => {
  const props = {
    ...rest,
    fill,
    stroke,
    width,
    height,
  };

  const icons = {
    FileBox,
    BuildingBox,
    IconBox,
    LightBulb,
    Location,
    Plane,
    Chip,
    Store,
    Basket,
    Book,
    Game,
    Video,
    Wallet,
    Flag,
    Stocks,
    Cloud,
    Diagram,
    Likes,
    Globe,
    Instagram,
    Facebook,
    Message,
    Messages: Message,
  } as const;

  let Component = icons[(name as keyof typeof icons) || "IconBox"];

  return <Component {...props} />;
};
